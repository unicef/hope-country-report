[project]
name = "hcr"
version = "0.1"
description = "Hope Country Report for displaying Hope data"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "sax", email = "s.apostolico@gmail.com" },
  { name = "stockman", email = "kuristockyrugano@gmail.com" },
]
requires-python = ">=3.12"

classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "azure-devops",
  "celery",
  "django",
  "django-admin-cursor-paginator",
  "django-admin-extra-buttons",
  "django-adminactions",
  "django-adminfilters",
  "django-advanced-filters",
  "django-anymail",
  "django-bitfield",
  "django-celery-beat",
  "django-celery-boost",
  "django-celery-results",
  "django-chartjs",
  "django-cleanup",
  "django-concurrency",
  "django-cors-headers",
  "django-csp",
  "django-debug-toolbar",
  "django-entangled",
  "django-environ",
  "django-extensions",
  "django-filter",
  "django-flags",
  "django-geojson[field]",
  "django-hijack",
  "django-import-export",
  "django-jsoneditor",
  "django-leaflet",
  "django-mptt",
  "django-push-notifications",
  "django-regex",
  "django-select2",
  "django-silk",
  "django-slick-reporting",
  "django-smart-admin",
  "django-smart-env",
  "django-storages[azure]",
  "django-strategy-field",
  "django-stubs-ext",
  "django-taggit",
  "django-tailwind",
  "django-timezone-field",
  "django-user-language-middleware",
  "django-zen-queries",
  "djangorestframework",
  "djangorestframework-gis",
  "docutils",
  "docx2pdf",
  "docxtpl",
  "drf-api-checker",
  "drf-extensions",
  "flower",
  "geojson",
  "htmlmin",
  "natural-keys",
  "pathvalidate",
  "pdfkit",
  "pillow",
  "psycopg2-binary<=2.9.10",
  "py-vapid",
  "pyhtml2pdf",
  "pymupdf",
  "pypdf",
  "pytest-xdist",
  "python-pptx",
  "pytopojson",
  "pytz",
  "pyzipper",
  "qrcode",
  "redis",
  "ruff",
  "sentry-sdk",
  "shapely",
  "social-auth-app-django",
  "sqlparse",
  "swapper",
  "tablib[xlsx]",
  "tzdata",
  "unicef-security",
  "watchdog[watchmedo]",
]

[dependency-groups]
dev = [
  "black",
  "cairosvg",
  "django-stubs",
  "django-stubs-ext",
  "django-webtest",
  "drf-api-checker",
  "factory-boy",
  "flake8",
  "freezegun",
  "fs",
  "isort",
  "mkdocs",
  "mkdocs-alias-plugin",
  "mkdocs-autolinks-plugin",
  "mkdocs-awesome-pages-plugin",
  "mkdocs-click",
  "mkdocs-embed-external-markdown",
  "mkdocs-ezglossary-plugin",
  "mkdocs-ezlinks-plugin",
  "mkdocs-gen-files",
  "mkdocs-get-deps",
  "mkdocs-gitsnippet-plugin",
  "mkdocs-include-markdown-plugin",
  "mkdocs-link-marker",
  "mkdocs-macros-plugin",
  "mkdocs-material",
  "mkdocs-panzoom-plugin",
  "mkdocs-pdf-export-plugin",
  "mkdocs-simple-hooks",
  "mkdocstrings[python]",
  "mypy",
  "pdbpp",
  "pre-commit",
  "py",
  "pymdown-extensions",
  "pyquery",
  "pytest",
  "pytest-celery",
  "pytest-cov",
  "pytest-django",
  "pytest-echo",
  "pytest-selenium",
  "pyupgrade",
  "responses",
  "selenium",
  "tox",
  "types-freezegun",
  "types-python-dateutil",
  "types-pytz",
  "types-redis",
  "types-requests",
  "types-setuptools",
]

types-decorator = [
  "types-six>=1.16.21.20241105",
]

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
known_django = "django"
known_typing = [ "typing" ]
known_tests = [ "unittest", "pytest" ]
known_app = "hope_country_report"
sections = [ "FUTURE", 'TYPING', 'STDLIB', "TESTS", 'DJANGO', 'THIRDPARTY', 'APP', 'LOCALFOLDER' ]
multi_line_output = 3
line_length = 120
balanced_wrapping = true
order_by_type = false
skip_glob = [ "**/migrations/**" ]

[tool.pytest.ini_options]
norecursedirs = "data .tox _plugin_template .idea  node_modules ~*"
DJANGO_SETTINGS_MODULE = "hope_country_report.config.settings"
django_find_project = false
log_format = "%(asctime)s %(levelname)s %(message)s"
log_level = "CRITICAL"
log_cli = false
log_date_format = "%Y-%m-%d %H:%M:%S"
junit_family = "xunit1"
pythonpath = "src"
testpaths = "tests"
tmp_path_retention_policy = "all"
tmp_path_retention_count = 0
selenium_exclude_debug = true
addopts = "-rs --reuse-db -n auto --maxfail=5 --with-selenium --tb=short --capture=sys --echo-version django --cov=hope_country_report --cov-config=tests/.coveragerc --cov-report html --cov-report xml"

markers = [
  "selenium",
  "api",
  "admin",
  "skip_models",
  "skip_buttons",
  "select_buttons",
  "smoke",
  "needs_prod_environment",
]

python_files = "test_*.py"
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::django.utils.deprecation.RemovedInDjango60Warning",
  "ignore::coverage.exceptions.CoverageWarning",
]
