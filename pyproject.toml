[project]
name = "hcr"
version = "0.1"
description = ""
authors = [
    {name = "sax", email = "s.apostolico@gmail.com"},
]
readme = "README.md"
license = {text = "Private"}
requires-python = ">=3.11"

dependencies = [
    "django",
    "azure-devops",
    "celery",
    "django-admin-cursor-paginator",
    "django-admin-extra-buttons",
    "django-adminactions",
    "django-adminfilters",
    "django-advanced-filters",
    "django-anymail",
    "django-bitfield",
    "django-celery-beat",
    "django-celery-results",
    "django-chartjs",
    "django-cleanup",
    "django-concurrency",
    "django-cors-headers",
    "django-csp",
    "django-debug-toolbar",
    "django-entangled",
    "django-environ",
    "django-filter",
    "django-flags",
    "django-geojson[field]",
    "django-hijack",
    "django-import-export",
    "django-jsoneditor",
    "django-leaflet",
    "django-mptt",
    "django-push-notifications",
    "django-regex",
    "django-select2",
    "django-silk",
    "django-slick-reporting",
    "django-smart-admin",
    "django-storages[azure]",
    "django-strategy-field",
    "django-taggit",
    "django-tailwind",
    "django-timezone-field",
    "django-user-language-middleware",
    "django-zen-queries",
    "djangorestframework-gis",
    "djangorestframework",
    "docutils",
    "docx2pdf",
    "docxtpl",
    "drf-api-checker",
    "drf-extensions",
    "flower",
    "geojson",
    "htmlmin",
    "natural-keys",
    "pdfkit",
    "pillow",
    "psycopg2-binary",
    "py-vapid",
    "pyhtml2pdf",
    "pyminizip",
    "PyMuPDF",
    "pypdf",
    "python-pptx",
    "pytopojson",
    "pytz",
    "qrcode",
    "redis",
    "sentry-sdk==1.40.4",
    "shapely",
    "social-auth-app-django",
    "sqlparse",
    "swapper",
    "tablib",
    "tzdata",
    "unicef-security",
    "pathvalidate",
    "django-stubs-ext",
    "uwsgi",
]

[tool.pdm.dev-dependencies]
dev = [
    "black",
    "django-stubs",
    "django-stubs-ext",
    "django-webtest",
    "drf-api-checker",
    "factory-boy",
    "flake8",
    "freezegun",
    "fs",
    "isort",
    "mkdocs",
    "mypy",
    "pdbpp",
    "pre-commit",
    "py",
    "pyquery",
    "pytest-celery",
    "pytest-cov",
    "pytest-django",
    "pytest-echo",
    "pytest-selenium",
    "pytest",
    "pyupgrade",
    "responses",
    "selenium<4.10",
    "tox",
    "types-freezegun",
    "types-python-dateutil",
    "types-pytz",
    "types-redis",
    "types-requests",
    "types-setuptools"
]


[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | snapshots
)/
'''

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
known_django = "django"
known_typing = ["typing"]
known_tests = ["unittest", "pytest"]
known_app = "hope_country_report"
sections = ["FUTURE", 'TYPING', 'STDLIB',"TESTS",'DJANGO','THIRDPARTY','APP','LOCALFOLDER']
multi_line_output = 3
line_length = 120
balanced_wrapping = true
order_by_type = false
skip_glob = ["**/migrations/**"]
