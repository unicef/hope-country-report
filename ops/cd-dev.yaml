trigger: none
pr: none
resources:
  - repo: self

variables:
  Kubernetes.serviceConnection: "ICTD-HOPE-AKS-DEV-uni-apps-aks-hope-dev-ictd-hope-dev-1614134848610"
  Kubernetes.namespace: "ictd-hope-dev"
  Docker.backend.repository: "hope-country-report"
  Docker.registryConnection: "ICTD-HOPE-DEV-ACR"
  Docker.url: "uniappsakshopedev.azurecr.io"
  tag: $(Build.SourceVersion)


stages:
  - stage: deploy
    displayName: DEPLOY
    jobs:
      - job: deploy_hcr
        pool:
          vmImage: 'ubuntu-latest'
        displayName: "[HOPE-COUNTRY-REPORT] Deployment"
        steps:
          - checkout: self
          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: $(Kubernetes.serviceConnection)
              command: 'login'
          - task: HelmDeploy@0
            displayName: "Update Chart dependencies"
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(Kubernetes.serviceConnection)
              command: package
              updatedependency: true
              chartPath: '**/ops/hope-country-report'
          - task: HelmDeploy@0
            displayName: "DEPLOY"
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(Kubernetes.serviceConnection)
              namespace: $(Kubernetes.namespace)
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '**/ops/hope-country-report'
              releaseName: 'hcr'
              install: true
              waitForExecution: false
              failOnStderr: false
              valueFile: '**/ops/hope-country-report/values.yaml'
              arguments: "--timeout 600s"
              overrideValues: "
                image.repository=$(Docker.url)/$(Docker.backend.repository),\
                image.tag=prd-$(tag),\
                ingress.annotations.appgw\\.ingress\\.kubernetes\\.io/appgw-ssl-certificate=kv-cert-unitst,\
                postgresql.auth.password=$(POSTGRESQL_PASSWORD),\
                postgresql.auth.postgresPassword=$(POSTGRES_POSTGRESQL_PASSWORD),\
                postgresql.primary.initdb.password=$(POSTGRES_POSTGRESQL_PASSWORD),\
                secret.AZURE_CLIENT_ID=$(AZURE_CLIENT_ID),\
                secret.AZURE_CLIENT_SECRET=$(AZURE_CLIENT_SECRET),\
                secret.AZURE_TENANT_KEY=$(AZURE_TENANT_KEY),\
                secret.DATABASE_HOPE_URL=$(DATABASE_HOPE_URL),\
                secret.DATABASE_URL=$(DATABASE_URL),\
                secret.SECRET_KEY=$(SECRET_KEY)
                "
