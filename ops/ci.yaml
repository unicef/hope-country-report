trigger:
  batch: true
  branches:
    include:
    - develop
pr:
  - develop
resources:
  - repo: self

variables:
  Docker.backend.repository: "hope-country-report"
  Docker.registryConnection: "ICTD-HOPE-DEV-ACR"
  Docker.url: "uniappsakshopedev.azurecr.io"
  tag: $(Build.SourceVersion)
  additionalTag: $(Build.SourceBranchName)


stages:
  - stage: build_and_push_backend_dev
    dependsOn: []
    displayName: BUILD and PUSH DEV
    jobs:
      - job: build_push_backend
        pool:
          vmImage: ubuntu-latest
        displayName: "[BACKEND_BUILD]"
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(Docker.registryConnection)'
              command: 'login'
          - script: |
              docker buildx create --use
              docker buildx build \
              --cache-from=$(Docker.url)/$(Docker.backend.repository)-cache:dev-$(additionalTag) \
              --cache-from=$(Docker.url)/$(Docker.backend.repository)-cache:dev-latest \
              --cache-to=$(Docker.url)/$(Docker.backend.repository)-cache:dev-$(additionalTag) \
              --cache-to=$(Docker.url)/$(Docker.backend.repository)-cache:dev-latest \
              -t $(Docker.url)/$(Docker.backend.repository):dev-$(tag) \
              --target dev \
              --push \
              ./
            displayName: Docker build dev
          - script: echo $(Build.SourceVersionMessage)
            displayName: 'Display Build.SourceVersionMessage'

  - stage: test_dev
    displayName: TEST
    dependsOn: build_and_push_backend_dev
    jobs:
      - job: tests
        pool:
          vmImage: ubuntu-latest
        displayName: "[DJANGO TEST]"
        steps:
          - task: Docker@2
            displayName: "[ACR] Login"
            inputs:
              command: login
              containerRegistry: $(Docker.registryConnection)
          - task: DockerCompose@0
            displayName: "Run tests"
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureContainerRegistry: $(Docker.registryConnection)
              dockerComposeFile: 'ops/compose.test.yml'
              action: 'Run a Docker Compose command'
              dockerComposeCommand: 'up --exit-code-from backend'
              dockerComposeFileArgs: |
                backend_image=$(Docker.url)/$(Docker.backend.repository):dev-$(tag)

  - stage: build_prd
    displayName: BUILD AND PUSH PRD
    dependsOn: test_dev
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: build_push_backend
        pool:
          vmImage: ubuntu-latest
        displayName: "[BACKEND_BUILD]"
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(Docker.registryConnection)'
              command: 'login'
          - script: |
              docker buildx create --use
              docker buildx build \
              --cache-from=$(Docker.url)/$(Docker.backend.repository)-cache:prd-$(additionalTag) \
              --cache-from=$(Docker.url)/$(Docker.backend.repository)-cache:prd-latest \
              --cache-to=$(Docker.url)/$(Docker.backend.repository)-cache:prd-$(additionalTag) \
              --cache-to=$(Docker.url)/$(Docker.backend.repository)-cache:prd-latest \
              -t $(Docker.url)/$(Docker.backend.repository):prd-$(tag) \
              --target prd \
              --push \
              ./
            displayName: Docker build prd
          - script: |
              mkdir -p $(Build.ArtifactStagingDirectory)/tag
              echo $(tag) > $(Build.ArtifactStagingDirectory)/tag/hcr.txt
            displayName: "Save tag to file"
          - task: PublishPipelineArtifact@1
            inputs:
              pathToPublish: "$(Build.ArtifactStagingDirectory)/tag"
              artifact: 'hope-country-report'
              publishLocation: 'pipeline'
            displayName: "Publish tag"