version: '3.8'

volumes:
  postgres_data:
  hope_postgres_data:

x-django-env: &django-env
  - ALLOWED_HOSTS=*
  - SECRET_KEY=secret-key
  - DATABASE_URL=postgis://postgres:postgres@db:5432/hcr
  - DATABASE_HOPE_URL=postgis://postgres:postgres@hopedb:5432/hopedb
  - REDIS_URL=redis://redis:6379/0
  - ALLOWED_HOSTS=backend,localhost
  - STATIC_ROOT=/
  - CACHE_URL=redis://redis:6379/1
  - STATIC_URL=/static/
  - EMAIL_BACKEND=
  - EMAIL_HOST=
  - EMAIL_PORT=
  - EMAIL_USE_TLS=
  - EMAIL_USE_SSL=
  - SENTRY_ENVIRONMENT=local
  - CELERY_BROKER_URL=redis://redis:6379/0
  - MAILJET_API_KEY=
  - MAILJET_SECRET_KEY=
  - WP_PRIVATE_KEY=
  - SECURE_SSL_REDIRECT=False
  - AZURE_TENANT_ID=
  - AZURE_CLIENT_KEY=
  - FLOWER_URL=http://flower:5555
  - STATIC_FILE_STORAGE=hope_country_report.apps.power_query.storage.DataSetStorage

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    command: dev
    environment: *django-env
    ports:
      - 8000:8000
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hcr
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  hopedb:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hopedb
    volumes:
      - hope_postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - 6379:6379
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    command: celery_worker
    environment: *django-env
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    command: celery_beat
    environment: *django-env
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    command: celery_flower
    environment: *django-env
    restart: unless-stopped
    ports:
      - 5555:5555
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
<<<<<<< Updated upstream
      test: ["CMD", "curl", "-f", "http://flower:5555/"]
      interval: 10s
      timeout: 5s
      retries: 5
=======
      test: ["CMD", "curl", "-f", "http://backend:5555/"]
      interval: 10s
      timeout: 5s
      retries: 5
>>>>>>> Stashed changes
