[tox]
requires =
    tox>=4.2
    tox-uv>=1.25
env_list =
    lint
    d52
    docs
    pkg_meta

[testenv:lint]
description = run static analysis and style check using ruff
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:d52]
description = run tests
base_python = python3.13
deps =
    .[dev]
pass_env =
    CACHE_DEFAULT
    CELERY_BOOST_FLOWER
    DATABASE_HOPE_URL
    DATABASE_URL
    GDAL_LIBRARY_PATH
    GEOS_LIBRARY_PATH
    STREAMING_BROKER_URL
set_env =
    CACHE_URL = redis://localhost:6379/1
    CELERY_BROKER_URL = redis://localhost:6379/1
    PYTHONDONTWRITEBYTECODE = 1
    SECRET_KEY = super-secret-key-just-for-testing
    STREAMING_BROKER_URL: rabbit://guest:guest@localhost:10000?exchange = hope_live
commands =
    pytest tests -rw --create-db --cov-report=xml:output/coverage.xml --junit-xml=output/junit.xml -o junit_family=legacy -vv {posargs}

[testenv:docs]
description = build mkdocs documentation
base_python = python3.13
skip_install = false
set_env =
    SECRET_KEY = super-secret-key-just-for-testing
commands =
    mkdocs build {posargs:}
dependency_groups = docs

[testenv:pkg_meta]
description = check that python package
base_python = python3.13
skip_install = true
deps =
    check-wheel-contents>=0.6
    twine>=5.1.1
    uv>=0.5
commands =
    {envpython} -m uv build -q --sdist --wheel --out-dir {env_tmp_dir} .
    {envpython} -m twine check {env_tmp_dir}{/}*
    {envpython} -m check_wheel_contents --ignore W002,W004,W009,W004 {env_tmp_dir}

[testenv:mypy]
description = run mypy type checking
base_python = python3.13
skip_install = false
deps =
    .[mypy]
set_env =
    SECRET_KEY = super-secret-key-just-for-testing
commands =
    mypy --config-file mypy.ini {posargs:}
dependency_groups =
    dev
    type-check
