version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    command: tests
    environment:
      - ALLOWED_HOSTS=*
      - SECRET_KEY=secret-key
      - DATABASE_URL=postgis://postgres:postgres@db:5432/hcr
      - DATABASE_HOPE_URL=postgis://postgres:postgres@hopedb:5432/hopedb
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=backend,localhost
      - STATIC_ROOT=/
      - CACHE_URL=redis://redis:6379/1
      - STATIC_URL=/static/
      - EMAIL_BACKEND=
      - EMAIL_HOST=
      - EMAIL_PORT=
      - EMAIL_USE_TLS=
      - EMAIL_USE_SSL=
      - SENTRY_ENVIRONMENT=local
      - CELERY_BROKER_URL=redis://redis:6379/0
      - MAILJET_API_KEY=
      - MAILJET_SECRET_KEY=
      - WP_PRIVATE_KEY=
      - SECURE_SSL_REDIRECT=False
      - AZURE_TENANT_ID=
      - AZURE_CLIENT_KEY=
      - FLOWER_URL=http://flower:5555
      - FILE_STORAGE_DEFAULT=django.core.files.storage.FileSystemStorage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./~build/:/code/~build
  db:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  redis:
    image: redis:7.2
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5
