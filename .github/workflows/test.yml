name: Test

on:
  push:
    branches:
      - develop
      - master
      - staging
      - release/*
      - feature/*
      - bugfix/*
      - hotfix/*
#  pull_request:
#    branches: [ develop, master ]
#    types: [ synchronize, opened, reopened, ready_for_review ]

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  attestations: write


jobs:
  changes:
    if: (github.event_name != 'pull_request'
            || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name)
            || github.event_name == 'create'
    runs-on: ubuntu-latest
    timeout-minutes: 1
    defaults:
      run:
        shell: bash
    outputs:
      run_tests: ${{ steps.changes.outputs.run_tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - id: changes
        name: Check for file changes
        uses: dorny/paths-filter@v3
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  test:
    needs: [ changes ]
    if: needs.changes.outputs.run_tests == 'true'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ env.IMAGE }}
      commit: ${{env.sha_short}}
      build_date: ${{env.BUILD_DATE}}
      branch: ${{env.BRANCH}}
    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 10000:5672
          - 10001:15672
      redis:
        image: redis:7.4.0
        ports:
          - 6379:6379
      db:
        image: postgis/postgis:14-3.5
        env:
          POSTGRES_DATABASE: country_report
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
        ports:
          - 15432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      hopedb:
        image: postgis/postgis:14-3.5
        env:
          POSTGRES_DATABASE: hopedb
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DOCKER_DEFAULT_PLATFORM: linux/amd64
      DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      DATABASE_URL: postgis://postgres:postgres@localhost:15432/country_report
      DATABASE_HOPE_URL: postgis://postgres:postgres@localhost:5432/hopedb
      CELERY_BROKER_URL: redis://localhost:6379/1
      CACHE_URL: redis://localhost:6379/2
      STREAMING_BROKER_URL: rabbit://guest:guest@localhost:10000?exchange=hope_live
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Hack container for local development
        if: ${{ env.ACT }}
        run: |
          echo /home/runner/externals/node20/bin >> $GITHUB_PATH
      - name: Hack container for local development
        run: |
          echo BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: "unicef/hope-country-report"
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: last_commit
        uses: ./.github/actions/last_commit
      - id: calc
        shell: bash
        run: |
          set -x
          LOCK_SHA=$(sha1sum uv.lock docker/bin/* docker/conf/* docker/Dockerfile | sha1sum | awk '{print $1}' | cut -c 1-8)
          IMAGE=$(echo '${{env.DOCKER_METADATA_OUTPUT_JSON}}' | jq '.tags[0]')
          echo "checksum=$LOCK_SHA" >> "$GITHUB_ENV"
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +"%Y-%m-%d %H:%M" )" >> $GITHUB_ENV
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Build Test Image
        run: |
             docker build \
                --target tests \
                -t ${{env.IMAGE}} \
                --cache-from "type=gha" \
                --cache-to "type=gha,mode=max" \
                -f docker/Dockerfile .

      - name: Run Test suite
        run: |
            mkdir -p output
            docker run --rm \
              --network host \
              -e PYTHONPATH=/app/src \
              -e DATABASE_URL=${DATABASE_URL} \
              -e CELERY_BROKER_URL=redis://localhost:6379/1 \
              -e CACHE_URL=redis://localhost:6379/2 \
              -e SECRET_KEY=super-secret-key-just-for-testing \
              -e DATABASE_HOPE_URL=${DATABASE_HOPE_URL} \
              -v "./output/:/app/output" \
              -v "./src/:/app/src" \
              -v "./tests:/app/tests" \
              -v "./pytest.ini:/app/pytest.ini" \
              -t ${{env.IMAGE}} \
              tox -e d52

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./output/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: false
          name: codecov-${{env.GITHUB_REF_NAME}}
