name: "Documentation"

on:
  push:
    branches:
      - develop
      - master
  schedule:
    - cron: '37 23 * * 2'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    defaults:
      run:
        shell: bash
    outputs:
      docs: ${{ steps.changed_files.outputs.docs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: changed_files
        name: Check for file changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml
  generate:
    name: Generate
    if: needs.changes.outputs.docs == 'true'
    needs: changes
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src/
    steps:
      - uses: actions/checkout@v4
      - uses: yezz123/setup-uv@v4

      - uses: actions/cache/restore@v4
        id: restore-cache
        with:
          path: .venv
          key: ${{ runner.os }}-${{ hashFiles('**/uv.lock') }}

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Build Doc
        run: .venv/bin/mkdocs build -d ./docs-output

      - uses: actions/cache/save@v4
        id: cache
        if: always() && steps.restore-cache.outputs.cache-hit != 'true'
        with:
          path: .venv
          key: ${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs-output

  # Deployment job
  deploy:
    needs: generate
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
