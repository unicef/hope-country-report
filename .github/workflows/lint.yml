name: Lint
on:
  push:
    branches:
      - develop
      - master
      - staging
      - release/*
      - feature/*
      - bugfix/*
      - hotfix/*
#  pull_request:
#    branches: [develop, master]
#    types: [synchronize, opened, reopened, ready_for_review]

defaults:
  run:
    shell: bash


concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true


permissions:
  contents: read

jobs:
  changes:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: check files
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      lint: ${{ steps.changes.outputs.lint }}
      docker: ${{ steps.changes.outputs.docker_base }}
    steps:
      - run: git config --global --add safe.directory $(realpath .)
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      - id: changes
        name: Check for backend file changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml
  ruff:
    needs: changes
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && needs.changes.outputs.lint
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - name: Install requirements
        run: pip install ruff==0.9.3
      - name: Check syntax
        # Stop the build if there are Python syntax errors or undefined names
        run: ruff check --output-format concise src/

      - name: Warnings
        run: ruff format --check
