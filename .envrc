# This is the .envrc for use with direnv.
# It's responsible for enforcing a standard dev environment by checking as much state as possible, and either performing
# initialization (e.g. activating the venv) or giving recommendations on how to reach the desired state.
# It also sets useful environment variables.
# If you'd like to override or set any custom environment variables, this .envrc will read a .env file at the end.

set -e

PROJECT_ROOT="$(
    cd "$(dirname "${BASH_SOURCE[0]}")"
    pwd -P
)"
export PROJECT_ROOT
export PYTHONUNBUFFERED=1
export PIP_DISABLE_PIP_VERSION_CHECK=on
export PYTHONPATH=./src:./stubs


if [ -z "${CI+x}" ]; then
    bold="$(tput bold)"
    red="$(tput setaf 1)"
    green="$(tput setaf 2)"
    yellow="$(tput setaf 3)"
    reset="$(tput sgr0)"
fi
# Check if a command is available
require() {
    command -v "$1" >/dev/null 2>&1
}
info() {
    echo -e "${bold}${*}${reset}"
}
die() {
    echo -e "${red}${bold}FATAL: ${*}${reset}" >&2
    exit 1
}

warn() {
    echo -e "${yellow}${*}${reset}" >&2
}

for pkg in \
    make \
    docker \
    pdm; do
    if ! require "$pkg"; then
        die "You seem to be missing the system dependency: ${pkg}
Please install homebrew, and run brew bundle."
    fi
done

export DEBUG=True
export SESSION_COOKIE_NAME="hcr_test_session"
export SESSION_COOKIE_DOMAIN=""
export SESSION_COOKIE_SECURE=False
export SECURE_HSTS_SECONDS=0
export SECURE_HSTS_PRELOAD=False
export CSRF_COOKIE_SECURE=False
export SECURE_SSL_REDIRECT=False
export CELERY_TASK_ALWAYS_EAGER=True
export AUTHENTICATION_BACKENDS="hope_country_report.utils.tests.backends.AnyUserAuthBackend"
#export SIGNING_BACKEND="hope_country_report.utils.signer.DebugSigner"

if [ -f "${PROJECT_ROOT}/.local" ]; then
    info "Loading variables from ${PROJECT_ROOT}/.local"
    dotenv "${PROJECT_ROOT}/.local"
fi

eval $(pdm venv activate in-project)

unset PS1

./manage.py env --check

